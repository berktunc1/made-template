          
pipeline TemperaturesPipeline {
 TemperaturesExtractor
    ->ZipArchiveInterpreter
    ->TemperaturesFilePicker 
    ->TemperaturesTextFileInterpreter
    ->TemperaturesCSVInterpreter 
    ->HeaderCell1Writer
    ->TemperaturesTableInterpreter
    ->TemperatureCelToFah
    ->BatteryTemperatureCelToFah
    ->TemperaturesLoader;
 
 
 block TemperaturesExtractor oftype HttpExtractor {
     url:"https://www.mowesta.com/data/measure/mowesta-dataset-20221107.zip";
 }

 block ZipArchiveInterpreter oftype ArchiveInterpreter {
     archiveType: "zip";
 }

 block TemperaturesFilePicker oftype FilePicker {
     path: "/data.csv";
 }

 block TemperaturesTextFileInterpreter oftype TextFileInterpreter {
     encoding: "latin4";
 }

 block TemperaturesCSVInterpreter oftype CSVInterpreter { 
     delimiter: ";";
 }

 block HeaderCell1Writer oftype CellWriter {
     at: range A1:F1;
     write: ["id","producer","model", "month","temperature","battery_temperature"];
 }

 block TemperaturesTableInterpreter oftype TableInterpreter { 
     header: true; 
     columns: [
                "id" oftype PositiveID,
                "producer" oftype text,
                "model" oftype text,
                "month" oftype integer,
                "temperature" oftype decimal,
                "battery_temperature" oftype decimal
              ];  
 }

 transform CelsiusToFahrenheit {
     from Celsius oftype decimal;
     to Fahrenheit oftype decimal;
     Fahrenheit: Celsius * 9/5 + 32;
 }

 block TemperatureCelToFah oftype TableTransformer {
     inputColumns: ['temperature'];
     outputColumn: 'temperature';
     use: CelsiusToFahrenheit;
 }

 block BatteryTemperatureCelToFah oftype TableTransformer {
     inputColumns: ['battery_temperature'];
     outputColumn: 'battery_temperature';
     use: CelsiusToFahrenheit;
 } 

 valuetype PositiveID oftype integer {
     constraints: [ PositiveIDConstraint ];
 }

 constraint PositiveIDConstraint on integer:
     value > 0;

 block TemperaturesLoader oftype SQLiteLoader { 
     table: "temperatures";
     file: "./temperatures.sqlite";
 }


}
